Grammar

    0 $accept: s1 $end

    1 s1: s1 s
    2   | s

    3 s: ASSIGNMENT ';'
    4  | IF_STMT
    5  | WHILE_STMT
    6  | DO_WHILE_STMT
    7  | FOR_STMT

    8 ASSIGNMENT: ID '=' E
    9           | ARR '=' E

   10 E: E '+' E
   11  | E '-' E
   12  | E '*' E
   13  | E '/' E
   14  | ARR
   15  | NUM
   16  | ID

   17 IF_STMT: IF '(' BE ')' '{' s1 '}'

   18 BE: BE OR BE
   19   | BE AND BE
   20   | NOT BE
   21   | ID RELOP ID
   22   | NUM RELOP ID
   23   | ID RELOP NUM
   24   | TRUEE
   25   | FALSEE
   26   | NUM
   27   | ARR RELOP ARR
   28   | ARR RELOP ID
   29   | ID RELOP ARR
   30   | ARR RELOP NUM
   31   | NUM RELOP ARR
   32   | NUM RELOP NUM

   33 ARR: ID X

   34 X: X SUBSCRIPT
   35  | SUBSCRIPT

   36 SUBSCRIPT: '[' ID ']'
   37          | '[' NUM ']'
   38          | '[' ARR ']'

   39 WHILE_STMT: WHILE '(' BE ')' '{' s1 '}'

   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE '(' BE ')' ';'

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION ')' '{' s1 '}'

   42 INIT_STMT: ASSIGNMENT
   43          | INT ASSIGNMENT
   44          | INT ASSIGNMENT ',' INIT_STMT
   45          | ASSIGNMENT ',' INIT_STMT

   46 MODIFICATION: ID INC
   47             | INC ID
   48             | ID DEC
   49             | DEC ID
   50             | INIT_STMT
   51             | ID INC ',' MODIFICATION
   52             | ID DEC ',' MODIFICATION INC ID ',' MODIFICATION
   53             | DEC ID ',' MODIFICATION


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 39 40 41
')' (41) 17 39 40 41
'*' (42) 12
'+' (43) 10
',' (44) 44 45 51 52 53
'-' (45) 11
'/' (47) 13
';' (59) 3 40 41
'=' (61) 8 9
'[' (91) 36 37 38
']' (93) 36 37 38
'{' (123) 17 39 40 41
'}' (125) 17 39 40 41
error (256)
ID (258) 8 16 21 22 23 28 29 33 36 46 47 48 49 51 52 53
NUM (259) 15 22 23 26 30 31 32 37
IF (260) 17
WHILE (261) 39 40
DO (262) 40
FOR (263) 41
TRUEE (264) 24
FALSEE (265) 25
INC (266) 46 47 51 52
DEC (267) 48 49 52 53
INT (268) 43 44
OR (269) 18
AND (270) 19
NOT (271) 20
RELOP (272) 21 22 23 27 28 29 30 31 32


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
s1 (32)
    on left: 1 2, on right: 0 1 17 39 40 41
s (33)
    on left: 3 4 5 6 7, on right: 1 2
ASSIGNMENT (34)
    on left: 8 9, on right: 3 42 43 44 45
E (35)
    on left: 10 11 12 13 14 15 16, on right: 8 9 10 11 12 13
IF_STMT (36)
    on left: 17, on right: 4
BE (37)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32,
    on right: 17 18 19 20 39 40 41
ARR (38)
    on left: 33, on right: 9 14 27 28 29 30 31 38
X (39)
    on left: 34 35, on right: 33 34
SUBSCRIPT (40)
    on left: 36 37 38, on right: 34 35
WHILE_STMT (41)
    on left: 39, on right: 5
DO_WHILE_STMT (42)
    on left: 40, on right: 6
FOR_STMT (43)
    on left: 41, on right: 7
INIT_STMT (44)
    on left: 42 43 44 45, on right: 41 44 45 50
MODIFICATION (45)
    on left: 46 47 48 49 50 51 52 53, on right: 41 51 52 53


state 0

    0 $accept: . s1 $end

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s1             go to state 6
    s              go to state 7
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 1

    8 ASSIGNMENT: ID . '=' E
   33 ARR: ID . X

    '='  shift, and go to state 14
    '['  shift, and go to state 15

    X          go to state 16
    SUBSCRIPT  go to state 17


state 2

   17 IF_STMT: IF . '(' BE ')' '{' s1 '}'

    '('  shift, and go to state 18


state 3

   39 WHILE_STMT: WHILE . '(' BE ')' '{' s1 '}'

    '('  shift, and go to state 19


state 4

   40 DO_WHILE_STMT: DO . '{' s1 '}' WHILE '(' BE ')' ';'

    '{'  shift, and go to state 20


state 5

   41 FOR_STMT: FOR . '(' INIT_STMT ';' BE ';' MODIFICATION ')' '{' s1 '}'

    '('  shift, and go to state 21


state 6

    0 $accept: s1 . $end
    1 s1: s1 . s

    $end   shift, and go to state 22
    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s              go to state 23
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 7

    2 s1: s .

    $default  reduce using rule 2 (s1)


state 8

    3 s: ASSIGNMENT . ';'

    ';'  shift, and go to state 24


state 9

    4 s: IF_STMT .

    $default  reduce using rule 4 (s)


state 10

    9 ASSIGNMENT: ARR . '=' E

    '='  shift, and go to state 25


state 11

    5 s: WHILE_STMT .

    $default  reduce using rule 5 (s)


state 12

    6 s: DO_WHILE_STMT .

    $default  reduce using rule 6 (s)


state 13

    7 s: FOR_STMT .

    $default  reduce using rule 7 (s)


state 14

    8 ASSIGNMENT: ID '=' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 28
    ARR  go to state 29


state 15

   36 SUBSCRIPT: '[' . ID ']'
   37          | '[' . NUM ']'
   38          | '[' . ARR ']'

    ID   shift, and go to state 30
    NUM  shift, and go to state 31

    ARR  go to state 32


state 16

   33 ARR: ID X .
   34 X: X . SUBSCRIPT

    '['  shift, and go to state 15

    $default  reduce using rule 33 (ARR)

    SUBSCRIPT  go to state 33


state 17

   35 X: SUBSCRIPT .

    $default  reduce using rule 35 (X)


state 18

   17 IF_STMT: IF '(' . BE ')' '{' s1 '}'

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 39
    ARR  go to state 40


state 19

   39 WHILE_STMT: WHILE '(' . BE ')' '{' s1 '}'

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 41
    ARR  go to state 40


state 20

   40 DO_WHILE_STMT: DO '{' . s1 '}' WHILE '(' BE ')' ';'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s1             go to state 42
    s              go to state 7
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 21

   41 FOR_STMT: FOR '(' . INIT_STMT ';' BE ';' MODIFICATION ')' '{' s1 '}'

    ID   shift, and go to state 1
    INT  shift, and go to state 43

    ASSIGNMENT  go to state 44
    ARR         go to state 10
    INIT_STMT   go to state 45


state 22

    0 $accept: s1 $end .

    $default  accept


state 23

    1 s1: s1 s .

    $default  reduce using rule 1 (s1)


state 24

    3 s: ASSIGNMENT ';' .

    $default  reduce using rule 3 (s)


state 25

    9 ASSIGNMENT: ARR '=' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 46
    ARR  go to state 29


state 26

   16 E: ID .
   33 ARR: ID . X

    '['  shift, and go to state 15

    $default  reduce using rule 16 (E)

    X          go to state 16
    SUBSCRIPT  go to state 17


state 27

   15 E: NUM .

    $default  reduce using rule 15 (E)


state 28

    8 ASSIGNMENT: ID '=' E .
   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 8 (ASSIGNMENT)


state 29

   14 E: ARR .

    $default  reduce using rule 14 (E)


state 30

   33 ARR: ID . X
   36 SUBSCRIPT: '[' ID . ']'

    '['  shift, and go to state 15
    ']'  shift, and go to state 51

    X          go to state 16
    SUBSCRIPT  go to state 17


state 31

   37 SUBSCRIPT: '[' NUM . ']'

    ']'  shift, and go to state 52


state 32

   38 SUBSCRIPT: '[' ARR . ']'

    ']'  shift, and go to state 53


state 33

   34 X: X SUBSCRIPT .

    $default  reduce using rule 34 (X)


state 34

   21 BE: ID . RELOP ID
   23   | ID . RELOP NUM
   29   | ID . RELOP ARR
   33 ARR: ID . X

    RELOP  shift, and go to state 54
    '['    shift, and go to state 15

    X          go to state 16
    SUBSCRIPT  go to state 17


state 35

   22 BE: NUM . RELOP ID
   26   | NUM .
   31   | NUM . RELOP ARR
   32   | NUM . RELOP NUM

    RELOP  shift, and go to state 55

    $default  reduce using rule 26 (BE)


state 36

   24 BE: TRUEE .

    $default  reduce using rule 24 (BE)


state 37

   25 BE: FALSEE .

    $default  reduce using rule 25 (BE)


state 38

   20 BE: NOT . BE

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 56
    ARR  go to state 40


state 39

   17 IF_STMT: IF '(' BE . ')' '{' s1 '}'
   18 BE: BE . OR BE
   19   | BE . AND BE

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    ')'  shift, and go to state 59


state 40

   27 BE: ARR . RELOP ARR
   28   | ARR . RELOP ID
   30   | ARR . RELOP NUM

    RELOP  shift, and go to state 60


state 41

   18 BE: BE . OR BE
   19   | BE . AND BE
   39 WHILE_STMT: WHILE '(' BE . ')' '{' s1 '}'

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    ')'  shift, and go to state 61


state 42

    1 s1: s1 . s
   40 DO_WHILE_STMT: DO '{' s1 . '}' WHILE '(' BE ')' ';'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5
    '}'    shift, and go to state 62

    s              go to state 23
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 43

   43 INIT_STMT: INT . ASSIGNMENT
   44          | INT . ASSIGNMENT ',' INIT_STMT

    ID  shift, and go to state 1

    ASSIGNMENT  go to state 63
    ARR         go to state 10


state 44

   42 INIT_STMT: ASSIGNMENT .
   45          | ASSIGNMENT . ',' INIT_STMT

    ','  shift, and go to state 64

    $default  reduce using rule 42 (INIT_STMT)


state 45

   41 FOR_STMT: FOR '(' INIT_STMT . ';' BE ';' MODIFICATION ')' '{' s1 '}'

    ';'  shift, and go to state 65


state 46

    9 ASSIGNMENT: ARR '=' E .
   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 9 (ASSIGNMENT)


state 47

   10 E: E '+' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 66
    ARR  go to state 29


state 48

   11 E: E '-' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 67
    ARR  go to state 29


state 49

   12 E: E '*' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 68
    ARR  go to state 29


state 50

   13 E: E '/' . E

    ID   shift, and go to state 26
    NUM  shift, and go to state 27

    E    go to state 69
    ARR  go to state 29


state 51

   36 SUBSCRIPT: '[' ID ']' .

    $default  reduce using rule 36 (SUBSCRIPT)


state 52

   37 SUBSCRIPT: '[' NUM ']' .

    $default  reduce using rule 37 (SUBSCRIPT)


state 53

   38 SUBSCRIPT: '[' ARR ']' .

    $default  reduce using rule 38 (SUBSCRIPT)


state 54

   21 BE: ID RELOP . ID
   23   | ID RELOP . NUM
   29   | ID RELOP . ARR

    ID   shift, and go to state 70
    NUM  shift, and go to state 71

    ARR  go to state 72


state 55

   22 BE: NUM RELOP . ID
   31   | NUM RELOP . ARR
   32   | NUM RELOP . NUM

    ID   shift, and go to state 73
    NUM  shift, and go to state 74

    ARR  go to state 75


state 56

   18 BE: BE . OR BE
   19   | BE . AND BE
   20   | NOT BE .

    $default  reduce using rule 20 (BE)


state 57

   18 BE: BE OR . BE

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 76
    ARR  go to state 40


state 58

   19 BE: BE AND . BE

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 77
    ARR  go to state 40


state 59

   17 IF_STMT: IF '(' BE ')' . '{' s1 '}'

    '{'  shift, and go to state 78


state 60

   27 BE: ARR RELOP . ARR
   28   | ARR RELOP . ID
   30   | ARR RELOP . NUM

    ID   shift, and go to state 79
    NUM  shift, and go to state 80

    ARR  go to state 81


state 61

   39 WHILE_STMT: WHILE '(' BE ')' . '{' s1 '}'

    '{'  shift, and go to state 82


state 62

   40 DO_WHILE_STMT: DO '{' s1 '}' . WHILE '(' BE ')' ';'

    WHILE  shift, and go to state 83


state 63

   43 INIT_STMT: INT ASSIGNMENT .
   44          | INT ASSIGNMENT . ',' INIT_STMT

    ','  shift, and go to state 84

    $default  reduce using rule 43 (INIT_STMT)


state 64

   45 INIT_STMT: ASSIGNMENT ',' . INIT_STMT

    ID   shift, and go to state 1
    INT  shift, and go to state 43

    ASSIGNMENT  go to state 44
    ARR         go to state 10
    INIT_STMT   go to state 85


state 65

   41 FOR_STMT: FOR '(' INIT_STMT ';' . BE ';' MODIFICATION ')' '{' s1 '}'

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 86
    ARR  go to state 40


state 66

   10 E: E . '+' E
   10  | E '+' E .
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 10 (E)


state 67

   10 E: E . '+' E
   11  | E . '-' E
   11  | E '-' E .
   12  | E . '*' E
   13  | E . '/' E

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 11 (E)


state 68

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   12  | E '*' E .
   13  | E . '/' E

    $default  reduce using rule 12 (E)


state 69

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   13  | E '/' E .

    $default  reduce using rule 13 (E)


state 70

   21 BE: ID RELOP ID .
   33 ARR: ID . X

    '['  shift, and go to state 15

    $default  reduce using rule 21 (BE)

    X          go to state 16
    SUBSCRIPT  go to state 17


state 71

   23 BE: ID RELOP NUM .

    $default  reduce using rule 23 (BE)


state 72

   29 BE: ID RELOP ARR .

    $default  reduce using rule 29 (BE)


state 73

   22 BE: NUM RELOP ID .
   33 ARR: ID . X

    '['  shift, and go to state 15

    $default  reduce using rule 22 (BE)

    X          go to state 16
    SUBSCRIPT  go to state 17


state 74

   32 BE: NUM RELOP NUM .

    $default  reduce using rule 32 (BE)


state 75

   31 BE: NUM RELOP ARR .

    $default  reduce using rule 31 (BE)


state 76

   18 BE: BE . OR BE
   18   | BE OR BE .
   19   | BE . AND BE

    AND  shift, and go to state 58

    $default  reduce using rule 18 (BE)


state 77

   18 BE: BE . OR BE
   19   | BE . AND BE
   19   | BE AND BE .

    $default  reduce using rule 19 (BE)


state 78

   17 IF_STMT: IF '(' BE ')' '{' . s1 '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s1             go to state 87
    s              go to state 7
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 79

   28 BE: ARR RELOP ID .
   33 ARR: ID . X

    '['  shift, and go to state 15

    $default  reduce using rule 28 (BE)

    X          go to state 16
    SUBSCRIPT  go to state 17


state 80

   30 BE: ARR RELOP NUM .

    $default  reduce using rule 30 (BE)


state 81

   27 BE: ARR RELOP ARR .

    $default  reduce using rule 27 (BE)


state 82

   39 WHILE_STMT: WHILE '(' BE ')' '{' . s1 '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s1             go to state 88
    s              go to state 7
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 83

   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE . '(' BE ')' ';'

    '('  shift, and go to state 89


state 84

   44 INIT_STMT: INT ASSIGNMENT ',' . INIT_STMT

    ID   shift, and go to state 1
    INT  shift, and go to state 43

    ASSIGNMENT  go to state 44
    ARR         go to state 10
    INIT_STMT   go to state 90


state 85

   45 INIT_STMT: ASSIGNMENT ',' INIT_STMT .

    $default  reduce using rule 45 (INIT_STMT)


state 86

   18 BE: BE . OR BE
   19   | BE . AND BE
   41 FOR_STMT: FOR '(' INIT_STMT ';' BE . ';' MODIFICATION ')' '{' s1 '}'

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    ';'  shift, and go to state 91


state 87

    1 s1: s1 . s
   17 IF_STMT: IF '(' BE ')' '{' s1 . '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5
    '}'    shift, and go to state 92

    s              go to state 23
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 88

    1 s1: s1 . s
   39 WHILE_STMT: WHILE '(' BE ')' '{' s1 . '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5
    '}'    shift, and go to state 93

    s              go to state 23
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 89

   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE '(' . BE ')' ';'

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    TRUEE   shift, and go to state 36
    FALSEE  shift, and go to state 37
    NOT     shift, and go to state 38

    BE   go to state 94
    ARR  go to state 40


state 90

   44 INIT_STMT: INT ASSIGNMENT ',' INIT_STMT .

    $default  reduce using rule 44 (INIT_STMT)


state 91

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' . MODIFICATION ')' '{' s1 '}'

    ID   shift, and go to state 95
    INC  shift, and go to state 96
    DEC  shift, and go to state 97
    INT  shift, and go to state 43

    ASSIGNMENT    go to state 44
    ARR           go to state 10
    INIT_STMT     go to state 98
    MODIFICATION  go to state 99


state 92

   17 IF_STMT: IF '(' BE ')' '{' s1 '}' .

    $default  reduce using rule 17 (IF_STMT)


state 93

   39 WHILE_STMT: WHILE '(' BE ')' '{' s1 '}' .

    $default  reduce using rule 39 (WHILE_STMT)


state 94

   18 BE: BE . OR BE
   19   | BE . AND BE
   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE '(' BE . ')' ';'

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    ')'  shift, and go to state 100


state 95

    8 ASSIGNMENT: ID . '=' E
   33 ARR: ID . X
   46 MODIFICATION: ID . INC
   48             | ID . DEC
   51             | ID . INC ',' MODIFICATION
   52             | ID . DEC ',' MODIFICATION INC ID ',' MODIFICATION

    INC  shift, and go to state 101
    DEC  shift, and go to state 102
    '='  shift, and go to state 14
    '['  shift, and go to state 15

    X          go to state 16
    SUBSCRIPT  go to state 17


state 96

   47 MODIFICATION: INC . ID

    ID  shift, and go to state 103


state 97

   49 MODIFICATION: DEC . ID
   53             | DEC . ID ',' MODIFICATION

    ID  shift, and go to state 104


state 98

   50 MODIFICATION: INIT_STMT .

    $default  reduce using rule 50 (MODIFICATION)


state 99

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION . ')' '{' s1 '}'

    ')'  shift, and go to state 105


state 100

   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE '(' BE ')' . ';'

    ';'  shift, and go to state 106


state 101

   46 MODIFICATION: ID INC .
   51             | ID INC . ',' MODIFICATION

    ','  shift, and go to state 107

    $default  reduce using rule 46 (MODIFICATION)


state 102

   48 MODIFICATION: ID DEC .
   52             | ID DEC . ',' MODIFICATION INC ID ',' MODIFICATION

    ','  shift, and go to state 108

    $default  reduce using rule 48 (MODIFICATION)


state 103

   47 MODIFICATION: INC ID .

    $default  reduce using rule 47 (MODIFICATION)


state 104

   49 MODIFICATION: DEC ID .
   53             | DEC ID . ',' MODIFICATION

    ','  shift, and go to state 109

    $default  reduce using rule 49 (MODIFICATION)


state 105

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION ')' . '{' s1 '}'

    '{'  shift, and go to state 110


state 106

   40 DO_WHILE_STMT: DO '{' s1 '}' WHILE '(' BE ')' ';' .

    $default  reduce using rule 40 (DO_WHILE_STMT)


state 107

   51 MODIFICATION: ID INC ',' . MODIFICATION

    ID   shift, and go to state 95
    INC  shift, and go to state 96
    DEC  shift, and go to state 97
    INT  shift, and go to state 43

    ASSIGNMENT    go to state 44
    ARR           go to state 10
    INIT_STMT     go to state 98
    MODIFICATION  go to state 111


state 108

   52 MODIFICATION: ID DEC ',' . MODIFICATION INC ID ',' MODIFICATION

    ID   shift, and go to state 95
    INC  shift, and go to state 96
    DEC  shift, and go to state 97
    INT  shift, and go to state 43

    ASSIGNMENT    go to state 44
    ARR           go to state 10
    INIT_STMT     go to state 98
    MODIFICATION  go to state 112


state 109

   53 MODIFICATION: DEC ID ',' . MODIFICATION

    ID   shift, and go to state 95
    INC  shift, and go to state 96
    DEC  shift, and go to state 97
    INT  shift, and go to state 43

    ASSIGNMENT    go to state 44
    ARR           go to state 10
    INIT_STMT     go to state 98
    MODIFICATION  go to state 113


state 110

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION ')' '{' . s1 '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5

    s1             go to state 114
    s              go to state 7
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 111

   51 MODIFICATION: ID INC ',' MODIFICATION .

    $default  reduce using rule 51 (MODIFICATION)


state 112

   52 MODIFICATION: ID DEC ',' MODIFICATION . INC ID ',' MODIFICATION

    INC  shift, and go to state 115


state 113

   53 MODIFICATION: DEC ID ',' MODIFICATION .

    $default  reduce using rule 53 (MODIFICATION)


state 114

    1 s1: s1 . s
   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION ')' '{' s1 . '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    DO     shift, and go to state 4
    FOR    shift, and go to state 5
    '}'    shift, and go to state 116

    s              go to state 23
    ASSIGNMENT     go to state 8
    IF_STMT        go to state 9
    ARR            go to state 10
    WHILE_STMT     go to state 11
    DO_WHILE_STMT  go to state 12
    FOR_STMT       go to state 13


state 115

   52 MODIFICATION: ID DEC ',' MODIFICATION INC . ID ',' MODIFICATION

    ID  shift, and go to state 117


state 116

   41 FOR_STMT: FOR '(' INIT_STMT ';' BE ';' MODIFICATION ')' '{' s1 '}' .

    $default  reduce using rule 41 (FOR_STMT)


state 117

   52 MODIFICATION: ID DEC ',' MODIFICATION INC ID . ',' MODIFICATION

    ','  shift, and go to state 118


state 118

   52 MODIFICATION: ID DEC ',' MODIFICATION INC ID ',' . MODIFICATION

    ID   shift, and go to state 95
    INC  shift, and go to state 96
    DEC  shift, and go to state 97
    INT  shift, and go to state 43

    ASSIGNMENT    go to state 44
    ARR           go to state 10
    INIT_STMT     go to state 98
    MODIFICATION  go to state 119


state 119

   52 MODIFICATION: ID DEC ',' MODIFICATION INC ID ',' MODIFICATION .

    $default  reduce using rule 52 (MODIFICATION)
